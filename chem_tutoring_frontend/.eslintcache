[{"/home/emily/Coding/tutoring_site/chem_tutoring_frontend/src/index.js":"1","/home/emily/Coding/tutoring_site/chem_tutoring_frontend/src/reportWebVitals.js":"2","/home/emily/Coding/tutoring_site/chem_tutoring_frontend/src/Components/Router.js":"3","/home/emily/Coding/tutoring_site/chem_tutoring_frontend/src/Components/CreateSessionForm.js":"4","/home/emily/Coding/tutoring_site/chem_tutoring_frontend/src/Components/Homepage.js":"5","/home/emily/Coding/tutoring_site/chem_tutoring_frontend/src/Components/Dashboard.js":"6","/home/emily/Coding/tutoring_site/chem_tutoring_frontend/src/Components/LoginForm.js":"7","/home/emily/Coding/tutoring_site/chem_tutoring_frontend/src/Components/NavBar.js":"8","/home/emily/Coding/tutoring_site/chem_tutoring_frontend/src/Components/Profile.js":"9","/home/emily/Coding/tutoring_site/chem_tutoring_frontend/src/Components/EditUser.js":"10","/home/emily/Coding/tutoring_site/chem_tutoring_frontend/src/Components/EditSession.js":"11","/home/emily/Coding/tutoring_site/chem_tutoring_frontend/src/Components/EmailRegistration.js":"12","/home/emily/Coding/tutoring_site/chem_tutoring_frontend/src/Components/Chat.js":"13","/home/emily/Coding/tutoring_site/chem_tutoring_frontend/src/Components/PasswordReset.js":"14","/home/emily/Coding/tutoring_site/chem_tutoring_frontend/src/Components/UserCard.js":"15","/home/emily/Coding/tutoring_site/chem_tutoring_frontend/src/Components/UserSessions.js":"16","/home/emily/Coding/tutoring_site/chem_tutoring_frontend/src/Components/SessionListing.js":"17","/home/emily/Coding/tutoring_site/chem_tutoring_frontend/src/Components/SignUpForm.js":"18","/home/emily/Coding/tutoring_site/chem_tutoring_frontend/src/Components/AdminPortal.js":"19","/home/emily/Coding/tutoring_site/chem_tutoring_frontend/src/Components/Errors.js":"20"},{"size":913,"mtime":1613593019248,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1608217291778,"results":"23","hashOfConfig":"22"},{"size":3229,"mtime":1614812906449,"results":"24","hashOfConfig":"22"},{"size":5169,"mtime":1614811068673,"results":"25","hashOfConfig":"22"},{"size":1632,"mtime":1613588057412,"results":"26","hashOfConfig":"22"},{"size":5744,"mtime":1614810047427,"results":"27","hashOfConfig":"22"},{"size":1800,"mtime":1613588065808,"results":"28","hashOfConfig":"22"},{"size":2606,"mtime":1613587888453,"results":"29","hashOfConfig":"22"},{"size":3220,"mtime":1614568279032,"results":"30","hashOfConfig":"22"},{"size":4658,"mtime":1614813165968,"results":"31","hashOfConfig":"22"},{"size":5322,"mtime":1614814884967,"results":"32","hashOfConfig":"22"},{"size":1112,"mtime":1613594124911,"results":"33","hashOfConfig":"22"},{"size":3938,"mtime":1614811762111,"results":"34","hashOfConfig":"22"},{"size":2519,"mtime":1613593909376,"results":"35","hashOfConfig":"22"},{"size":615,"mtime":1614810779146,"results":"36","hashOfConfig":"22"},{"size":2542,"mtime":1614564417907,"results":"37","hashOfConfig":"22"},{"size":1106,"mtime":1614564821571,"results":"38","hashOfConfig":"22"},{"size":8598,"mtime":1614827721788,"results":"39","hashOfConfig":"22"},{"size":8961,"mtime":1614565773416,"results":"40","hashOfConfig":"22"},{"size":777,"mtime":1614041680763,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"f6ylb9",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"44"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"44"},"/home/emily/Coding/tutoring_site/chem_tutoring_frontend/src/index.js",[],["93","94"],"/home/emily/Coding/tutoring_site/chem_tutoring_frontend/src/reportWebVitals.js",[],"/home/emily/Coding/tutoring_site/chem_tutoring_frontend/src/Components/Router.js",["95","96"],"/home/emily/Coding/tutoring_site/chem_tutoring_frontend/src/Components/CreateSessionForm.js",["97","98","99","100"],"import React, { useEffect, useState } from 'react'\nimport { Form, Button, Dropdown } from 'react-bootstrap'\nimport DayPicker from \"react-day-picker\";\nimport TimePicker from 'react-time-picker'\nimport { axios_instance } from '..';\nimport Select from 'react-select'\nimport \"../../node_modules/react-time-picker/dist/TimePicker.css\";\nimport \"../../node_modules/react-clock/dist/Clock.css\";\nconst CreateSessionForm = (props) => {\n\n  const [date, setDate] = useState('')\n  const [time, setTime] = useState('')\n  const [endTime, setEndTime] = useState('')\n  const [subject, setSubject] = useState('')\n  const [user_list, set_user_list] = useState([])\n  const [other_user, setOtherUser] = useState({})\n  const [errors, setErrors] = useState('')\n\n  useEffect(() => {\n    if (props.roles.includes('tutor')) {\n      axios_instance.get('http://127.0.0.1:5000/user/students')\n        .then(function (response) {\n          console.log(response)\n          set_user_list([...user_list, ...response.data])\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    }\n\n    if (props.roles.includes('student')) {\n      axios_instance.get('http://127.0.0.1:5000/user/tutors')\n        .then(function (response) {\n          console.log(response)\n          set_user_list([...user_list, ...response.data])\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    }\n  }, [])\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    const session = {\n      subject: subject,\n      date: formatDateTime(date, time),\n      end_date: formatDateTime(date, endTime),\n      other_user: other_user\n    }\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }\n\n    axios_instance.post('http://127.0.0.1:5000/user/sessions/new', session, config)\n      .then((res) => {\n        console.log(res)\n      }).catch((err) => {\n        console.log(err)\n      })\n\n\n  }\n\n  const onDropdownSelect = (eventKey) => {\n    setSubject(eventKey);\n  }\n\n  const handleDayClick = (day, { selected }) => {\n    const selectedDay = selected ? undefined : day;\n    setDate(selectedDay)\n  }\n\n  const handleSelect = (selected) => {\n    setOtherUser(selected)\n  }\n\n  const onTimeChange = (time) => {\n    setTime(time)\n  }\n\n  const onEndTimeChange = (time) => {\n    setEndTime(time)\n  }\n  const formatDateTime = (date, time) => {\n    const hour = parseInt(time.substring(0, 1)) == 0 ? parseInt(time.substring(1, 2)) : parseInt(time.substring(0, 2))\n    const minutes = time.substring(2)\n    const amPM = hour < 12 ? 'AM' : 'PM'\n    const formatted_hour = hour > 12 ? hour - 12 : hour;\n    time = formatted_hour + minutes + \" \" + amPM\n    return date.getMonth() + 1 + \"/\" + date.getDate() + \"/\" + date.getFullYear() + \" \" + time;\n  }\n\n\n\n  return (\n    <div className=\"form-comp\">\n      <h1>Set up a Session</h1>\n      <Form onSubmit={handleSubmit}>\n        <Dropdown onSelect={onDropdownSelect}>\n            <Dropdown.Toggle variant=\"success\" className=\"subject\">\n              <span> {subject ? subject : \"Subject\"}</span>\n            </Dropdown.Toggle>\n          <Dropdown.Menu>\n            <Dropdown.Item eventKey=\"Math\" >Math</Dropdown.Item>\n            <Dropdown.Item eventKey=\"English\">English</Dropdown.Item>\n            <Dropdown.Item eventKey=\"Chemistry\">Chemistry</Dropdown.Item>\n            <Dropdown.Item eventKey=\"Computer Science\">Computer Science</Dropdown.Item>\n            <Dropdown.Item eventKey=\"History\">History</Dropdown.Item>\n            <Dropdown.Item eventKey=\"Physics\">Physics</Dropdown.Item>\n            <Dropdown.Item eventKey=\"Biology\">Biology</Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n\n        <Form.Group controlId=\"session_attendee\">\n          <Form.Label>{props.roles.includes('tutor') ? 'Student' : 'Tutor'}</Form.Label>\n          <Select\n            className=\"select center\"\n            onChange={handleSelect}\n            options={user_list}\n            getOptionLabel={(option) => option.username}\n            getOptionValue={(option) => option._id}\n          />\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label classname=\"block-label\">Date</Form.Label>\n          <div>\n            <DayPicker\n              className=\"calendar\"\n              disabledDays={{ before: new Date() }}\n              format=\"M/D/YYYY\"\n              name=\"date\"\n              id=\"date\"\n              onDayClick={handleDayClick}\n              selectedDays={date}\n            />\n          </div>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label className=\"block-label\">Start Time: </Form.Label>\n          <TimePicker\n            name=\"time\"\n            id=\"time\"\n            onChange={onTimeChange}\n            value={time}\n          />\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label className=\"block-label\">End Time: </Form.Label>\n          <TimePicker\n            name=\"end_time\"\n            id=\"end_time\"\n            onChange={onEndTimeChange}\n            value={endTime}\n          />\n        </Form.Group>\n\n        <Button variant=\"primary\" type=\"submit\">Submit</Button>\n      </Form>\n    </div>);\n}\n\nexport default CreateSessionForm;","/home/emily/Coding/tutoring_site/chem_tutoring_frontend/src/Components/Homepage.js",[],"/home/emily/Coding/tutoring_site/chem_tutoring_frontend/src/Components/Dashboard.js",["101","102","103","104","105","106","107"],"import React, { useState, useEffect } from 'react'\nimport { axios_instance } from '..'\nimport UserCard from './UserCard'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport ReactPaginate from 'react-paginate'\nimport { Form, FormControl, Dropdown } from 'react-bootstrap'\nimport { NonceProvider } from 'react-select'\n//Add support for som1 who is tutor + student\nconst Dashboard = (props) => {\n  const [data, setData] = useState({\n    data: [],\n    filtered: [],\n    displayed: []\n  })\n\n  const [filters, setFilters] = useState({\n    username:'',\n    fullName: '',\n    subject:'',\n    type:''\n  })\n\n  const perPage = 20;\n  const pageCount = Math.ceil(data.data.length) / perPage;\n\n \n  useEffect(()=> {\n   const filtered =  data.data.filter((user)=>{\n      const usernameCheck = user.username.toLowerCase().includes(filters.username);\n      const subjectCheck = user.roles.includes(\"tutor\") && user.tutoring_subjects ? user.tutoring_subjects.includes(filters.subject) : user.problem_subjects ? user.problem_subjects.includes(filters.subject) : false;\n      const typeCheck = user.roles.includes(filters.typeCheck);\n      const fullNameCheck = user.full_name.toLowerCase().includes(filters.fullName.toLowerCase());\n      let allChecks = true;\n\n      if(filters.username){\n        allChecks = allChecks && usernameCheck;\n      }\n      if(filters.subject){\n        allChecks = allChecks && subjectCheck;\n      }\n      if(filters.fullName){\n        allChecks = allChecks && fullNameCheck;\n      }\n      if(filters.type){\n        allChecks = allChecks && typeCheck;\n      }\n      return allChecks\n    })\n\n    setData({...data, filtered: filtered, displayed:filtered.slice(0,perPage)})\n  }, [filters])\n\n\n  useEffect(() => {\n    if (props.roles.includes('tutor')) {\n      axios_instance.get('http://127.0.0.1:5000/user/students')\n        .then(function (response) {\n          setData({ ...data, data: response.data, filtered:response.data, displayed: response.data.slice(0, perPage) })\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    }\n    if (props.roles.includes('student')) {\n      axios_instance.get('http://127.0.0.1:5000/user/tutors')\n        .then(function (response) {\n          setData({ ...data, data: response.data, filtered:response.data, displayed: response.data.slice(0, perPage) })\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    }\n  }, [])\n\n\n\n  const handlePageClick = (e) => {\n    let selected = e.selected;\n    let offset = Math.ceil(selected * perPage);\n    setData({ ...data, displayed: perPage >= data.filtered.length ? data.filtered.slice(offset, data.filtered.length) : data.filtered.slice(offset, offset + 2) })\n  };\n\n\n  const userDash = data.displayed.map((user) => {\n    return (\n        <UserCard className=\"user_card\" key={user._id.$oid} full_name={user.full_name} username={user.username} bio={user.biography} />\n    )\n  })\n\n  const setUsernameFilter = (e) => {\n    setFilters({...filters, username: e.target.value})\n  }\n  const setNameFilter = (e) => {\n    setFilters({...filters, fullName: e.target.value})\n  }\n\n  const onDropdownSelect = (eventKey) => {\n    setFilters({...filters, subject: eventKey});\n  }\n\n  return (\n    <div>\n      <h1>Users</h1>\n      <div className=\"user_username\">\n        <Form className=\"form-comp\">\n          <FormControl className=\"user-username\" type=\"text\" name=\"username\" placeholder=\"Username\" onChange={setUsernameFilter}/>\n\n          <FormControl className=\"user-fullname\" type=\"text\" name=\"fullname\" placeholder=\"Name\" onChange={setNameFilter}/>\n          {//filter by student/tutor option if you're both a student & tutor\n            props.roles.includes(\"tutor\") && props.roles.includes(\"student\") ? (\n              <Form.Group controlId=\"role\">\n                <Form.Check\n                  inline\n                  value=\"tutors\"\n                  name=\"role\"\n                  label=\"Tutor\"\n                  type=\"radio\"\n                  id=\"tutor\"\n                />\n                <Form.Check\n                  inline\n                  value=\"students\"\n                  name=\"role\"\n                  label=\"Student\"\n                  type=\"radio\"\n                  id=\"student\"\n                />\n              </Form.Group>) : null}\n          <Dropdown onSelect={onDropdownSelect}>\n            <Dropdown.Toggle variant=\"success\" className=\"subject\">\n            <span> {filters.subject ? filters.subject : \"Subject\"}</span>\n          </Dropdown.Toggle>\n            <Dropdown.Menu>\n              <Dropdown.Item eventKey=\"Math\" >Math</Dropdown.Item>\n              <Dropdown.Item eventKey=\"English\">English</Dropdown.Item>\n              <Dropdown.Item eventKey=\"Chemistry\">Chemistry</Dropdown.Item>\n              <Dropdown.Item eventKey=\"Computer Science\">Computer Science</Dropdown.Item>\n              <Dropdown.Item eventKey=\"History\">History</Dropdown.Item>\n              <Dropdown.Item eventKey=\"Physics\">Physics</Dropdown.Item>\n              <Dropdown.Item eventKey=\"Biology\">Biology</Dropdown.Item>\n              <Dropdown.Item eventKey=\"\">None</Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n        </Form>\n      </div>\n\n      {userDash.length != 0 ? <div className=\"userdash\">{userDash}</div>:<h3>No matching users found</h3>}\n\n\n      <ReactPaginate\n        pageCount={pageCount}\n        pageRangeDisplayed={5}\n        marginPagesDisplayed={5}\n        onPageChange={handlePageClick}\n        containerClassName={'pagination'}\n        subContainerClassName={'pages pagination'}\n        activeClassName={'active'}\n        previousLabel={'Previous'}\n        nextLabel={'Next'}\n        breakLabel={'...'}\n      />\n\n    </div >\n  )\n}\n\n\nexport default Dashboard;","/home/emily/Coding/tutoring_site/chem_tutoring_frontend/src/Components/LoginForm.js",[],"/home/emily/Coding/tutoring_site/chem_tutoring_frontend/src/Components/NavBar.js",[],"/home/emily/Coding/tutoring_site/chem_tutoring_frontend/src/Components/Profile.js",["108","109","110","111"],"import React, { useEffect, useState } from 'react'\nimport { Link, useParams } from \"react-router-dom\";\nimport { axios_instance } from '../index'\nimport DayPicker from \"react-day-picker\";\nimport UserSessions from './UserSessions';\nimport { Row, Col, Container } from 'react-bootstrap'\n//View for viewing own profile and someone else viewing profile\nconst Profile = (props) => {\n    let { username } = useParams();\n    const [user, set_user] = useState('');\n\n    useEffect(() => {\n        const config = {\n            xhrFields: {\n                withCredentials: true\n            },\n            crossDomain: true,\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        }\n\n        axios_instance.get(`/user/${username}`, config)\n            .then((res) => {\n                const parsed_dates = res.data.availability.map((date) => {\n                    const milliseconds = date.$date;\n                    const parsed_date = new Date(milliseconds)\n                    return parsed_date;\n                })\n                res.data.availability = parsed_dates;\n                return res.data\n            }).then((res) => {\n                set_user(res);\n            }).then(console.log(user))\n    }, [])\n\n\n    return (\n        <div>\n            <div>\n                <h1>{user.full_name}</h1>\n                <h2 className=\"subtitle\">@{username}</h2>\n                {\n                    username == props.username && (\n                        <Link to={{\n                            pathname: `/user/${username}/edit`,\n                            state: {\n                                user: {\n                                    ...user\n                                }\n                            }\n                        }}>Edit\n                        </Link>)\n                }\n                <div className=\"about-div\">\n                    <p className=\"bio\">{user.biography}</p>\n                </div>\n                <hr />\n\n                {username == props.username ?\n                    <Container>\n                        <Row>\n                            <Col md=\"6\">\n                                <h3>Availability</h3>\n                                <DayPicker\n                                    className=\"calendar\"\n                                    format=\"MM/DD/YYYY\"\n                                    selectedDays={user.availability}\n                                    name=\"availability\"\n                                />\n                            </Col>\n                            <Col md=\"6\" className=\"user_sessions\">\n                                {username == props.username && <UserSessions />}\n                            </Col>\n                        </Row>\n                    </Container>\n                    : <div>\n                        <h3>Availability</h3>\n                        <DayPicker\n                            className=\"calendar\"\n                            format=\"MM/DD/YYYY\"\n                            selectedDays={user.availability}\n                            name=\"availability\"\n                        />\n                    </div>}\n            </div>\n        </div>\n    )\n\n}\n\nexport default Profile;","/home/emily/Coding/tutoring_site/chem_tutoring_frontend/src/Components/EditUser.js",["112"],"/home/emily/Coding/tutoring_site/chem_tutoring_frontend/src/Components/EditSession.js",["113","114","115","116","117","118"],"/home/emily/Coding/tutoring_site/chem_tutoring_frontend/src/Components/EmailRegistration.js",["119"],"import React, { useEffect} from 'react'\nimport {useLocation, useHistory} from 'react-router-dom'\nimport axios from 'axios'\n\nconst EmailRegistration = () => {\n    const location = useLocation();\n    const history = useHistory();\n    const token = location.search.substr(7);\n    console.log(token)\n    const config = {\n        crossDomain: true,\n        headers: {\n          'Authorization':  ` Bearer ${token}`\n      }\n      }\n    useEffect(()=>{\n        axios.get('http://127.0.0.1:5000/finalize', config)\n       .then((res)=>{\n            // if(res.data.access_token){\n                setTimeout(()=>{\n                    localStorage.clear()\n                    localStorage.setItem(\"token\", res.data.access_token);\n                    history.push(\"/\")\n                    window.location.reload(true)\n                }, 2000)\n           // }\n        })\n        .catch((err)=>{\n            console.log(token)\n            console.log(err);\n        })\n\n    }, [])\n    return (\n    <div>\n        <h1>Successful registration</h1>\n        <p>Redirecting home...</p>\n    </div>)\n}\n\nexport default EmailRegistration;","/home/emily/Coding/tutoring_site/chem_tutoring_frontend/src/Components/Chat.js",["120","121","122","123"],"import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Form, Button } from 'react-bootstrap';\nimport { axios_instance } from '..';\nimport Select from 'react-select';\nimport jwt_decode from 'jwt-decode'\n\nconst Chat = (props) => {\n  const { username } = useParams();\n  const [messages, set_messages] = useState([]);\n  const [user_list, set_user_list] = useState([]);\n  const [recipient, set_recipient] = useState(undefined);\n  const config = {\n    xhrFields: {\n      withCredentials: true\n    },\n    crossDomain: true,\n    headers: {\n      'Content-Type': 'application/json',\n    }\n  }\n\n  useEffect(() => {\n    if (props.roles.includes('tutor')) {\n      axios_instance.get('http://127.0.0.1:5000/user/students')\n        .then(function (response) {\n          set_user_list([...user_list, ...response.data])\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    }\n\n    if (props.roles.includes('student')) {\n      axios_instance.get('http://127.0.0.1:5000/user/tutors')\n        .then(function (response) {\n          set_user_list([...user_list, ...response.data])\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    }\n  }, [])\n\n  useEffect(() => {\n    if (recipient && recipient.username != undefined) {\n\n      axios_instance.get(`http://127.0.0.1:5000/user/${username}/chat/${recipient._id.$oid}`, config)\n        .then((res) => {\n          if (res.data) {\n            set_messages(res.data);\n          }\n        })\n        .catch((err) => {\n          console.log(err)\n        })\n    }\n  }, [recipient])\n\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }\n\n    const message = {\n      recipient: recipient._id.$oid,\n      body: e.target.message.value,\n      sender: jwt_decode(localStorage.getItem(\"token\")).id\n    }\n\n    console.log(jwt_decode(localStorage.getItem(\"token\")).id)\n    axios_instance.post(`http://127.0.0.1:5000/user/${username}/chat/${recipient._id.$oid}`, message, config)\n      .then((res) => {\n        set_messages([...messages, res.data]);\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n\n  }\n\n  const handleSelect = (selected) => {\n    set_recipient(selected)\n  }\n\n\n  const message_list = messages.map((message) => {\n\n    let message_class = recipient._id.$oid == message.sender.$oid ? \"recieved\" : \"sent\";\n\n    const date = new Date(message.timestamp.$date);\n\n    const timestamp = date.getHours() + \":\" + date.getMinutes();\n\n    return (\n      <div className={`message ${message_class}`}>\n        <span className=\"message_text\">{message.body}</span>\n        <span className=\"message_time\">{timestamp}UTC</span>\n\n      </div>)\n  })\n\n\n  return (\n    <Form onSubmit={handleSubmit} className=\"message_form\">\n      {recipient ? <div>\n        <h2 class=\"username\">{recipient.username}</h2>\n        <div className=\"message_list\">{message_list.length !== 0 ? message_list : <span class=\"flavor-text\">Start a conversation</span>}</div>\n      </div>\n       : <div> <h2>Chat</h2><span class=\"flavor-text\">Select someone to chat with.</span></div>}\n\n      <div className =\"message_form_input\">\n        <div>\n        <Select\n          menuPortalTarget={document.querySelector('body')}\n          maxMenuHeight={220}\n          classNamePrefix=\"react-select\"\n          className=\"select center\"\n          onChange={handleSelect}\n          options={user_list}\n          getOptionLabel={(option) => option.username}\n          getOptionValue={(option) => option._id}\n        />\n        </div> \n        {recipient && (\n          <div>\n            <Form.Group controlId=\"message\">\n              <Form.Control type=\"text\" placeholder=\"Message\" />\n            </Form.Group>\n            <Button type=\"submit\">Send</Button>\n          </div>)}\n      </div>\n    </Form>\n  )\n}\n\nexport default Chat;","/home/emily/Coding/tutoring_site/chem_tutoring_frontend/src/Components/PasswordReset.js",["124","125","126"],"\nimport React, { useState, useEffect } from 'react'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport axios from 'axios'\n\nconst PasswordReset = () => {\n    const location = useLocation();\n    const token = location.search.substr(7);\n\n    const resetPassword = (e) => {\n        e.preventDefault();\n        const config = {\n            crossDomain: true,\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${token}`\n            }\n        }\n\n        axios.post('http://127.0.0.1:5000/reset_password', {password: e.target.new_pass.value, confirmNewPassword: e.target.confirm_new_pass.value}, config)\n        .then((res)=>{\n            console.log(res);\n        })\n        .catch((err)=>{\n            console.log(err);\n        })\n    }\n\n    const sendResetEmail = (e) => {\n        const config = {\n            crossDomain: true,\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        }\n        e.preventDefault();\n        const data = {\n            email : e.target.email.value\n        }\n        axios.post('http://127.0.0.1:5000/send_password_email', data, config)\n        .then((res)=>{\n            console.log(res);\n        })\n        .catch((err)=>{\n            console.log(err);\n        })\n    }\n\n    return (\n        <div>\n            <h1>Reset Your Password</h1>\n            { token ?\n                (\n            \n                    <Form onSubmit={resetPassword}>\n                        <Form.Group controlId=\"new_pass\">\n                            <Form.Label>New password</Form.Label>\n                            <Form.Control />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"confirm_new_pass\">\n                            <Form.Label>Confirm new password</Form.Label>\n                            <Form.Control />\n                        </Form.Group>\n                        <Button type=\"submit\">Submit</Button>\n                    </Form>\n                )\n                :\n                (\n                    <Form onSubmit={sendResetEmail}>\n                        <Form.Group controlId=\"email\">\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control />\n                        </Form.Group>\n                        <Button type=\"submit\">Send</Button>\n                    </Form>)\n            }\n        </div>\n    )\n}\n\nexport default PasswordReset;","/home/emily/Coding/tutoring_site/chem_tutoring_frontend/src/Components/UserCard.js",[],"/home/emily/Coding/tutoring_site/chem_tutoring_frontend/src/Components/UserSessions.js",["127","128"],"import React, { useEffect, useState } from 'react'\nimport { propTypes } from 'react-bootstrap/esm/Image';\nimport { useParams } from 'react-router-dom'\nimport { axios_instance } from '..'\nimport SessionListing from './SessionListing';\nimport ReactPaginate from 'react-paginate'\n\nconst UserSessions = (props) => {\n    const { username } = useParams();\n    const perPage = 1;\n    const [sessions_list, set_sessions_list] = useState({\n        raw_sessions: [],\n        displayed_sessions: []\n    })\n    const pageCount = Math.ceil(sessions_list.raw_sessions.length) / perPage;\n\n\n    useEffect(() => {\n        const config = {\n            xhrFields: {\n                withCredentials: true\n            },\n            crossDomain: true,\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        }\n\n        axios_instance.get(`http://127.0.0.1:5000/user/${username}/sessions`, config)\n            .then((res) => {\n                console.log(res)\n                set_sessions_list({\n                    raw_sessions: res.data,\n                    displayed_sessions: res.data.slice(0, perPage)\n                })\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n\n    }, [])\n\n    const handlePageClick = (e) => {\n        let selected = e.selected;\n        let offset = Math.ceil(selected * perPage);\n        set_sessions_list({ ...sessions_list, displayed_sessions: perPage >= sessions_list.raw_sessions.length ? sessions_list.raw_sessions.slice(offset, sessions_list.raw_sessions.length) : sessions_list.raw_sessions.slice(offset, offset + perPage) })\n    };\n\n    console.log(sessions_list)\n    const sessions = sessions_list.displayed_sessions.map((session) => (\n        <SessionListing key={session._id} session={session} />\n    ))\n\n    return (\n        <div>\n            <h3>Sessions</h3>\n            <div className=\"session_list\">\n                {sessions.length !== 0 ? sessions : <h3>No sessions scheduled</h3>}\n                </div>\n            <ReactPaginate\n                pageCount={pageCount}\n                pageRangeDisplayed={5}\n                marginPagesDisplayed={5}\n                onPageChange={handlePageClick}\n                containerClassName={'pagination'}\n                subContainerClassName={'pages pagination'}\n                activeClassName={'active'}\n                previousLabel={'Previous'}\n                nextLabel={'Next'}\n                breakLabel={'...'}\n            />\n        </div>\n    )\n}\n\nexport default UserSessions;","/home/emily/Coding/tutoring_site/chem_tutoring_frontend/src/Components/SessionListing.js",["129"],"import React from 'react';\nimport {Link} from 'react-router-dom'\nimport { Card, Button } from 'react-bootstrap';\nconst SessionListing = (props) => {   \n\n  const parseDate = (dateInput) => {\n    const date = new Date(dateInput);\n    return  date.getMonth()+1 + \"/\" + date.getDate() + \"/\" + date.getFullYear();\n   }\n   \n  return (\n<div className=\"center card-session-container\">\n<Card className=\"card wide-card session\">\n    <Card.Body>\n      <Card.Title className=\"card-title\">Session with {props.session.student.username}</Card.Title>\n      <Card.Text>\n      <span id=\"tutor\">Tutor: @{props.session.tutor.username}</span> \n       <span id=\"subject\">{props.session.subject}</span>\n       <span id=\"date\">{\n       parseDate(props.session.date.$date)\n       }</span>\n      </Card.Text>\n      <Link to={{\n                       pathname: `/user/sessions/${props.session._id.$oid}/edit`,\n                       state: {\n                           session: props.session\n                       }\n                    }}>Edit\n        </Link>\n    </Card.Body>\n  </Card>\n    </div>\n)}\n\nexport default SessionListing;","/home/emily/Coding/tutoring_site/chem_tutoring_frontend/src/Components/SignUpForm.js",["130","131","132","133"],"/home/emily/Coding/tutoring_site/chem_tutoring_frontend/src/Components/AdminPortal.js",["134","135","136","137","138","139","140","141","142","143","144","145","146"],"\nimport React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n  useHistory\n} from \"react-router-dom\";\nimport ReactPaginate from 'react-paginate'\nimport { Form, FormControl, Dropdown, Col , Row, Pagination} from 'react-bootstrap'\n\n\n//ensure that start and end date are after each other in edit/sess create\n//allow deletion of profiles\n//auto delete if not 'is active' after a certain time period?\n//How to verify session happened? \n//sidebar, simple black + white interface, nothin too fancy\n\nconst AdminPortal = () => {\n  //What if only a few head admins could make admin accs, only thru the admin portal?\n  const [users, setUsers] = useState({\n    userList: [],\n    displayed: [],\n    filtered: [],\n  });\n\n  const [offset, setOffset] = useState(0);\n  const perPage = 10;\n  let pageCount = Math.ceil(users.filtered.length) / perPage;\n  const [sessions, setSessions] = useState([]);\n  const [nameFilter, setNameFilter] = useState('');\n  const [emailFilter, setEmailFilter] = useState('');\n  const [usernameFilter, setUsernameFilter] = useState('');\n  const [phoneFilter, setPhoneFilter] = useState('')\n  const [role, setRole] = useState('')\n  const [subjectsFilter, setSubjectsFilter] = useState([])\n\n  const onCheckChange = (value) => {\n    if (subjectsFilter.includes(value)) {\n      setSubjectsFilter(subjectsFilter.filter(element => element != value));\n    }\n    else {\n      setSubjectsFilter([...subjectsFilter, value])\n    }\n\n  }\n  \n  const handlePageClick = (e) => {\n    let selected = e.selected;\n    let offset = Math.ceil(selected * perPage);\n    setOffset(offset);\n  };\n\n  useEffect(()=>{\n    setUsers({ ...users, displayed: offset + perPage >= users.filtered.length ? users.filtered.slice(offset, users.filtered.length) : users.filtered.slice(offset, offset + perPage) })\n  }, [offset])\n\n  \n  useEffect(() => {\n    const filtered = users.userList.filter((user) => {\n      let allChecks = true;\n      allChecks = nameFilter ? (user.full_name.toLowerCase().includes(nameFilter.toLowerCase()) ? allChecks : false) : allChecks;\n      allChecks = emailFilter ? (user.email.toLowerCase().includes(emailFilter.toLowerCase()) ? allChecks : false) : allChecks;\n      allChecks = phoneFilter ? (user.us_phone_number.includes(phoneFilter) ? allChecks : false) : allChecks;\n      allChecks = subjectsFilter.length !== 0 ? ((user.tutor_subjects &&\n        subjectsFilter.every((element) => user.tutor_subjects.includes(element)))\n        || (user.problem_subjects && subjectsFilter.every((element) => user.problem_subjects.includes(element))) ? allChecks : false) : allChecks;\n      allChecks = usernameFilter ? (user.username.toLowerCase().includes(usernameFilter.toLowerCase()) ? allChecks : false) : allChecks;\n      allChecks = role ? (user.roles.includes(role) ? allChecks : false) : allChecks;\n      return allChecks;\n    })\n\n\n    setUsers({ ...users,filtered: filtered, displayed: (offset + perPage >= filtered.length ? filtered.slice(offset, filtered.length) : filtered.slice(offset, offset + perPage)) })\n\n  }, [nameFilter, emailFilter, usernameFilter, phoneFilter, role, subjectsFilter])\n\n  const hookUpdateFunctions = {\n    \"setNameFilter\": setNameFilter,\n    \"setEmailFilter\": setEmailFilter,\n    \"setUsernameFilter\": setUsernameFilter,\n    \"setPhoneFilter\": setPhoneFilter,\n    \"setRole\": setRole,\n    \"setSubjectsFilter\": onCheckChange\n  }\n\n  useEffect(() => {\n    axios.get('http://127.0.0.1:5000/user')\n      .then((res) => {\n        setUsers({ userList: res.data, filtered: res.data, displayed: res.data });\n      })\n  }, [])\n\n\n  const userList = users.displayed.map((user) => (\n    <tr className=\"userListing\">\n      <td>{user.full_name}</td>\n      <td>{user.username}</td>\n      <td>{user.email}</td>\n      <td>{user.us_phone_number}</td>\n      <td>{user.roles}</td>\n      <td>{user.tutor_subjects && user.tutor_subjects.length !== 0 ? user.tutor_subjects.join(\", \") : \"N/A\"}</td>\n      <td>{user.tutor_subjects && user.problem_subjects.length !== 0 ? user.problem_subjects : \"N/A\"}</td>\n      <td>TO BE IMPLEMENTED</td>\n    </tr>\n  ))\n  // const userList = () => {\n  //     axios.get(/user)\n\n  //     //search by email, username, full name, etc\n  //     //sort by hours, alphabetical names, etc\n  //     //each has drop down menu showing all info\n  // }\n\n  const sessionsList = () => {\n    //find by tutor, find by student, by subject\n  }\n\n  const inputChange = (e) => {\n    hookUpdateFunctions[e.target.name](e.target.value)\n  }\n\n\n  const filtering = () => {\n    return (\n      <div className=\"filtering\">\n        <Form>\n          <Row>\n            <Col>\n              <Form.Group>\n                <Form.Label>Name</Form.Label>\n                <FormControl className=\"search-input\" type=\"text\" name=\"setNameFilter\" onChange={inputChange} />\n                <Form.Label>Email</Form.Label>\n                <FormControl className=\"search-input\" type=\"text\" name=\"setEmailFilter\" onChange={inputChange} />\n              </Form.Group>\n            </Col>\n\n            <Col>\n            <Form.Label>Username</Form.Label>\n            <FormControl className=\"search-input\" type=\"text\" name=\"setUsernameFilter\" onChange={inputChange} />\n            <Form.Label>Phone # (Stored in format xxx-xxx-xxxx)</Form.Label>\n            <FormControl className=\"search-input\" type=\"text\" name=\"setPhoneFilter\" onChange={inputChange} />\n            </Col>\n          </Row>\n          <Row>\n            {subjectsFilterRender()}\n          </Row>\n\n          <Row>\n            <Form.Group className=\"radios\" controlId=\"role\">\n              <Form.Check\n                inline\n                value=\"tutor\"\n                name=\"setRole\"\n                label=\"Tutor\"\n                type=\"radio\"\n                id=\"tutor\"\n                onClick={inputChange}\n              />\n              <Form.Check\n                inline\n                value=\"student\"\n                name=\"setRole\"\n                label=\"Student\"\n                type=\"radio\"\n                id=\"student\"\n                onClick={inputChange}\n              />\n              <Form.Check\n                inline\n                value=\"student,tutor\"\n                name=\"setRole\"\n                label=\"Both\"\n                type=\"radio\"\n                id=\"both\"\n                onClick={inputChange}\n              />\n            </Form.Group>\n            </Row>\n        </Form>\n      </div>)\n  }\n\n  const subjectsFilterRender = (problem) => {\n    const subjectsFilter = ['Math', 'Physics', 'Chemistry', 'Biology', 'English', 'History', 'Computer Science']\n    let id = problem ? \"problem\" : \"best\"\n    return (\n      <div className=\"checkboxes\">\n        <Form.Group controlId={`math ${id}`}>\n          <Form.Check type=\"checkbox\" value=\"Math\" label=\"Math\" name=\"setSubjectsFilter\" onChange={inputChange} />\n        </Form.Group>\n        <Form.Group controlId={`physics ${id}`}>\n          <Form.Check type=\"checkbox\" value=\"Physics\" label=\"Physics\" name=\"setSubjectsFilter\" onChange={inputChange} />\n        </Form.Group>\n        <Form.Group controlId={`chemistry ${id}`}>\n          <Form.Check type=\"checkbox\" value=\"Chemistry\" label=\"Chemistry\" name=\"setSubjectsFilter\" onChange={inputChange} />\n        </Form.Group>\n        <Form.Group controlId={`biology ${id}`}>\n          <Form.Check type=\"checkbox\" value=\"Biology\" label=\"Biology\" name=\"setSubjectsFilter\" onChange={inputChange} />\n        </Form.Group>\n        <Form.Group controlId={`english ${id}`}>\n          <Form.Check type=\"checkbox\" value=\"English\" label=\"English\" name=\"setSubjectsFilter\" onChange={inputChange} />\n        </Form.Group>\n        <Form.Group controlId={`history ${id}`}>\n          <Form.Check type=\"checkbox\" value=\"History\" label=\"History\" name=\"setSubjectsFilter\" onChange={inputChange} />\n        </Form.Group>\n        <Form.Group controlId={`compsci ${id}`}>\n          <Form.Check type=\"checkbox\" value=\"Computer Science\" name=\"setSubjectsFilter\" label=\"Computer Science\" onChange={inputChange} />\n        </Form.Group>\n      </div>\n    )\n  }\n  //,aybe go back thru checkboxes and automate their creation with an array of sorts, so you don't have to copy-paste another one every time a new subject is added\n  return (<div>\n    <html>\n    <h1>Admin Portal</h1>\n    {filtering()}\n    <table>\n      <tr>\n        <th>Full Name</th>\n        <th>Username</th>\n        <th>Email</th>\n        <th>Phone</th>\n        <th>Roles</th>\n        <th>Tutor's Subjects</th>\n        <th>Problem Subjects</th>\n        <th>Hours</th>\n      </tr>\n      {userList}\n    </table>\n    <ReactPaginate\n    pageCount={pageCount}\n    pageRangeDisplayed={5}\n    marginPagesDisplayed={5}\n    onPageChange={handlePageClick}\n    containerClassName={'pagination'}\n    subContainerClassName={'pages pagination'}\n    activeClassName={'active'}\n    previousLabel={'previous'}\n    nextLabel={'next'}\n    breakLabel={'...'} \n    />\n    </html>\n  </div>)\n}\n\n\n\n\n\nexport default AdminPortal;","/home/emily/Coding/tutoring_site/chem_tutoring_frontend/src/Components/Errors.js",["147"],"import { Link } from 'react-router-dom';\nimport React from 'react';\n\nconst Errors = (props) => {\nconsole.log(props.error)\n    const determineRendered = () => {\n        switch (props.error) {\n            case 401:\n                return (\n                <div>\n                    <h1>401</h1>\n                    <h2>You do not have access to this page</h2>\n                    <Link to=\"/\">Home</Link>\n                </div>);\n            case 404: \n                return (\n                <div>\n                    <h1>404</h1>\n                    <h2>The page was not found.</h2>\n                    <Link to=\"/\">Home</Link>\n                </div>)\n        }\n    }\n    return (\n        <div>\n            {determineRendered()}\n        </div>\n    )\n}\n\n\nexport default Errors;",{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","severity":1,"message":"153","line":64,"column":69,"nodeType":"154","messageId":"155","endLine":64,"endColumn":71},{"ruleId":"152","severity":1,"message":"153","line":71,"column":69,"nodeType":"154","messageId":"155","endLine":71,"endColumn":71},{"ruleId":"156","severity":1,"message":"157","line":17,"column":10,"nodeType":"158","messageId":"159","endLine":17,"endColumn":16},{"ruleId":"156","severity":1,"message":"160","line":17,"column":18,"nodeType":"158","messageId":"159","endLine":17,"endColumn":27},{"ruleId":"161","severity":1,"message":"162","line":41,"column":6,"nodeType":"163","endLine":41,"endColumn":8,"suggestions":"164"},{"ruleId":"152","severity":1,"message":"153","line":88,"column":49,"nodeType":"154","messageId":"155","endLine":88,"endColumn":51},{"ruleId":"156","severity":1,"message":"165","line":4,"column":10,"nodeType":"158","messageId":"159","endLine":4,"endColumn":19},{"ruleId":"156","severity":1,"message":"166","line":4,"column":21,"nodeType":"158","messageId":"159","endLine":4,"endColumn":24},{"ruleId":"156","severity":1,"message":"167","line":4,"column":26,"nodeType":"158","messageId":"159","endLine":4,"endColumn":29},{"ruleId":"156","severity":1,"message":"168","line":7,"column":10,"nodeType":"158","messageId":"159","endLine":7,"endColumn":23},{"ruleId":"161","severity":1,"message":"169","line":51,"column":6,"nodeType":"163","endLine":51,"endColumn":15,"suggestions":"170"},{"ruleId":"161","severity":1,"message":"171","line":73,"column":6,"nodeType":"163","endLine":73,"endColumn":8,"suggestions":"172"},{"ruleId":"152","severity":1,"message":"173","line":147,"column":24,"nodeType":"154","messageId":"155","endLine":147,"endColumn":26},{"ruleId":"161","severity":1,"message":"174","line":35,"column":8,"nodeType":"163","endLine":35,"endColumn":10,"suggestions":"175"},{"ruleId":"152","severity":1,"message":"153","line":44,"column":30,"nodeType":"154","messageId":"155","endLine":44,"endColumn":32},{"ruleId":"152","severity":1,"message":"153","line":60,"column":27,"nodeType":"154","messageId":"155","endLine":60,"endColumn":29},{"ruleId":"152","severity":1,"message":"153","line":73,"column":43,"nodeType":"154","messageId":"155","endLine":73,"endColumn":45},{"ruleId":"161","severity":1,"message":"176","line":26,"column":6,"nodeType":"163","endLine":26,"endColumn":8,"suggestions":"177"},{"ruleId":"156","severity":1,"message":"178","line":1,"column":17,"nodeType":"158","messageId":"159","endLine":1,"endColumn":26},{"ruleId":"156","severity":1,"message":"179","line":3,"column":10,"nodeType":"158","messageId":"159","endLine":3,"endColumn":19},{"ruleId":"156","severity":1,"message":"180","line":4,"column":21,"nodeType":"158","messageId":"159","endLine":4,"endColumn":30},{"ruleId":"156","severity":1,"message":"181","line":6,"column":8,"nodeType":"158","messageId":"159","endLine":6,"endColumn":14},{"ruleId":"152","severity":1,"message":"153","line":87,"column":49,"nodeType":"154","messageId":"155","endLine":87,"endColumn":51},{"ruleId":"156","severity":1,"message":"182","line":101,"column":9,"nodeType":"158","messageId":"159","endLine":101,"endColumn":21},{"ruleId":"161","severity":1,"message":"183","line":33,"column":8,"nodeType":"163","endLine":33,"endColumn":10,"suggestions":"184"},{"ruleId":"161","severity":1,"message":"162","line":43,"column":6,"nodeType":"163","endLine":43,"endColumn":8,"suggestions":"185"},{"ruleId":"152","severity":1,"message":"173","line":46,"column":41,"nodeType":"154","messageId":"155","endLine":46,"endColumn":43},{"ruleId":"161","severity":1,"message":"186","line":58,"column":6,"nodeType":"163","endLine":58,"endColumn":17,"suggestions":"187"},{"ruleId":"152","severity":1,"message":"153","line":93,"column":44,"nodeType":"154","messageId":"155","endLine":93,"endColumn":46},{"ruleId":"156","severity":1,"message":"188","line":2,"column":17,"nodeType":"158","messageId":"159","endLine":2,"endColumn":25},{"ruleId":"156","severity":1,"message":"178","line":2,"column":27,"nodeType":"158","messageId":"159","endLine":2,"endColumn":36},{"ruleId":"156","severity":1,"message":"189","line":3,"column":10,"nodeType":"158","messageId":"159","endLine":3,"endColumn":20},{"ruleId":"156","severity":1,"message":"190","line":2,"column":10,"nodeType":"158","messageId":"159","endLine":2,"endColumn":19},{"ruleId":"161","severity":1,"message":"191","line":41,"column":8,"nodeType":"163","endLine":41,"endColumn":10,"suggestions":"192"},{"ruleId":"156","severity":1,"message":"193","line":3,"column":16,"nodeType":"158","messageId":"159","endLine":3,"endColumn":22},{"ruleId":"156","severity":1,"message":"160","line":8,"column":18,"nodeType":"158","messageId":"159","endLine":8,"endColumn":27},{"ruleId":"152","severity":1,"message":"173","line":124,"column":66,"nodeType":"154","messageId":"155","endLine":124,"endColumn":68},{"ruleId":"152","severity":1,"message":"173","line":137,"column":72,"nodeType":"154","messageId":"155","endLine":137,"endColumn":74},{"ruleId":"156","severity":1,"message":"194","line":151,"column":11,"nodeType":"158","messageId":"159","endLine":151,"endColumn":19},{"ruleId":"156","severity":1,"message":"195","line":5,"column":3,"nodeType":"158","messageId":"159","endLine":5,"endColumn":16},{"ruleId":"156","severity":1,"message":"196","line":6,"column":3,"nodeType":"158","messageId":"159","endLine":6,"endColumn":9},{"ruleId":"156","severity":1,"message":"197","line":7,"column":3,"nodeType":"158","messageId":"159","endLine":7,"endColumn":8},{"ruleId":"156","severity":1,"message":"189","line":8,"column":3,"nodeType":"158","messageId":"159","endLine":8,"endColumn":13},{"ruleId":"156","severity":1,"message":"198","line":11,"column":29,"nodeType":"158","messageId":"159","endLine":11,"endColumn":37},{"ruleId":"156","severity":1,"message":"199","line":11,"column":50,"nodeType":"158","messageId":"159","endLine":11,"endColumn":60},{"ruleId":"156","severity":1,"message":"200","line":31,"column":10,"nodeType":"158","messageId":"159","endLine":31,"endColumn":18},{"ruleId":"156","severity":1,"message":"201","line":31,"column":20,"nodeType":"158","messageId":"159","endLine":31,"endColumn":31},{"ruleId":"152","severity":1,"message":"173","line":41,"column":66,"nodeType":"154","messageId":"155","endLine":41,"endColumn":68},{"ruleId":"161","severity":1,"message":"202","line":57,"column":6,"nodeType":"163","endLine":57,"endColumn":14,"suggestions":"203"},{"ruleId":"161","severity":1,"message":"204","line":77,"column":6,"nodeType":"163","endLine":77,"endColumn":82,"suggestions":"205"},{"ruleId":"156","severity":1,"message":"206","line":116,"column":9,"nodeType":"158","messageId":"159","endLine":116,"endColumn":21},{"ruleId":"156","severity":1,"message":"207","line":186,"column":11,"nodeType":"158","messageId":"159","endLine":186,"endColumn":25},{"ruleId":"208","severity":1,"message":"209","line":7,"column":9,"nodeType":"210","messageId":"211","endLine":22,"endColumn":10},"no-native-reassign",["212"],"no-negated-in-lhs",["213"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'errors' is assigned a value but never used.","Identifier","unusedVar","'setErrors' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.roles' and 'user_list'. Either include them or remove the dependency array. You can also do a functional update 'set_user_list(u => ...)' if you only need 'user_list' in the 'set_user_list' call.","ArrayExpression",["214"],"'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'NonceProvider' is defined but never used.","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array. You can also do a functional update 'setData(d => ...)' if you only need 'data' in the 'setData' call.",["215"],"React Hook useEffect has missing dependencies: 'data' and 'props.roles'. Either include them or remove the dependency array. You can also do a functional update 'setData(d => ...)' if you only need 'data' in the 'setData' call.",["216"],"Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'user' and 'username'. Either include them or remove the dependency array.",["217"],"React Hook useEffect has a missing dependency: 'props.username'. Either include it or remove the dependency array.",["218"],"'useEffect' is defined but never used.","'useParams' is defined but never used.","'DateUtils' is defined but never used.","'Select' is defined but never used.","'handleChange' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'config', 'history', and 'token'. Either include them or remove the dependency array.",["219"],["220"],"React Hook useEffect has missing dependencies: 'config' and 'username'. Either include them or remove the dependency array.",["221"],"'useState' is defined but never used.","'useHistory' is defined but never used.","'propTypes' is defined but never used.","React Hook useEffect has a missing dependency: 'username'. Either include it or remove the dependency array.",["222"],"'Button' is defined but never used.","'subjects' is assigned a value but never used.","'BrowserRouter' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Dropdown' is defined but never used.","'Pagination' is defined but never used.","'sessions' is assigned a value but never used.","'setSessions' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'users'. Either include it or remove the dependency array. You can also do a functional update 'setUsers(u => ...)' if you only need 'users' in the 'setUsers' call.",["223"],"React Hook useEffect has missing dependencies: 'offset' and 'users'. Either include them or remove the dependency array. You can also do a functional update 'setUsers(u => ...)' if you only need 'users' in the 'setUsers' call.",["224"],"'sessionsList' is assigned a value but never used.","'subjectsFilter' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation",{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},{"desc":"235","fix":"236"},{"desc":"225","fix":"237"},{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},{"desc":"242","fix":"243"},{"desc":"244","fix":"245"},"Update the dependencies array to be: [props.roles, user_list]",{"range":"246","text":"247"},"Update the dependencies array to be: [data, filters]",{"range":"248","text":"249"},"Update the dependencies array to be: [data, props.roles]",{"range":"250","text":"251"},"Update the dependencies array to be: [user, username]",{"range":"252","text":"253"},"Update the dependencies array to be: [props.username]",{"range":"254","text":"255"},"Update the dependencies array to be: [config, history, token]",{"range":"256","text":"257"},{"range":"258","text":"247"},"Update the dependencies array to be: [config, recipient, username]",{"range":"259","text":"260"},"Update the dependencies array to be: [username]",{"range":"261","text":"262"},"Update the dependencies array to be: [offset, users]",{"range":"263","text":"264"},"Update the dependencies array to be: [nameFilter, emailFilter, usernameFilter, phoneFilter, role, subjectsFilter, users, offset]",{"range":"265","text":"266"},[1413,1415],"[props.roles, user_list]",[1692,1701],"[data, filters]",[2438,2440],"[data, props.roles]",[1242,1244],"[user, username]",[674,676],"[props.username]",[961,963],"[config, history, token]",[1247,1249],[1616,1627],"[config, recipient, username]",[1246,1248],"[username]",[1850,1858],"[offset, users]",[3080,3156],"[nameFilter, emailFilter, usernameFilter, phoneFilter, role, subjectsFilter, users, offset]"]