[{"/home/emily/Coding/tutoring_site/chem_tutoring_frontend/src/index.js":"1","/home/emily/Coding/tutoring_site/chem_tutoring_frontend/src/Homepage.js":"2","/home/emily/Coding/tutoring_site/chem_tutoring_frontend/src/Router.js":"3","/home/emily/Coding/tutoring_site/chem_tutoring_frontend/src/reportWebVitals.js":"4","/home/emily/Coding/tutoring_site/chem_tutoring_frontend/src/LoginForm.js":"5","/home/emily/Coding/tutoring_site/chem_tutoring_frontend/src/SignUpForm.js":"6","/home/emily/Coding/tutoring_site/chem_tutoring_frontend/src/NavBar.js":"7","/home/emily/Coding/tutoring_site/chem_tutoring_frontend/src/Profile.js":"8","/home/emily/Coding/tutoring_site/chem_tutoring_frontend/src/Dashboard.js":"9","/home/emily/Coding/tutoring_site/chem_tutoring_frontend/src/CreateSessionForm.js":"10","/home/emily/Coding/tutoring_site/chem_tutoring_frontend/src/UserCard.js":"11","/home/emily/Coding/tutoring_site/chem_tutoring_frontend/src/EditUser.js":"12","/home/emily/Coding/tutoring_site/chem_tutoring_frontend/src/UserSessions.js":"13","/home/emily/Coding/tutoring_site/chem_tutoring_frontend/src/SessionListing.js":"14","/home/emily/Coding/tutoring_site/chem_tutoring_frontend/src/EditSession.js":"15"},{"size":925,"mtime":1610055547831,"results":"16","hashOfConfig":"17"},{"size":3511,"mtime":1610054695832,"results":"18","hashOfConfig":"17"},{"size":1938,"mtime":1609433796369,"results":"19","hashOfConfig":"17"},{"size":362,"mtime":1608217291778,"results":"20","hashOfConfig":"17"},{"size":1749,"mtime":1609434062767,"results":"21","hashOfConfig":"17"},{"size":3535,"mtime":1609346495273,"results":"22","hashOfConfig":"17"},{"size":2585,"mtime":1609433851960,"results":"23","hashOfConfig":"17"},{"size":2660,"mtime":1610055482232,"results":"24","hashOfConfig":"17"},{"size":1182,"mtime":1609268760379,"results":"25","hashOfConfig":"17"},{"size":3812,"mtime":1609433005738,"results":"26","hashOfConfig":"17"},{"size":468,"mtime":1609268188746,"results":"27","hashOfConfig":"17"},{"size":4732,"mtime":1609430007398,"results":"28","hashOfConfig":"17"},{"size":1164,"mtime":1609429100475,"results":"29","hashOfConfig":"17"},{"size":711,"mtime":1609430548233,"results":"30","hashOfConfig":"17"},{"size":3698,"mtime":1609433198297,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"y2em8q",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"39"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"39"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"39"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"39"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"39"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"39"},"/home/emily/Coding/tutoring_site/chem_tutoring_frontend/src/index.js",[],"/home/emily/Coding/tutoring_site/chem_tutoring_frontend/src/Homepage.js",[],"/home/emily/Coding/tutoring_site/chem_tutoring_frontend/src/Router.js",["70","71"],"import React, { useEffect } from \"react\";\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n  useHistory\n} from \"react-router-dom\";\nimport CreateSessionForm from \"./CreateSessionForm\";\nimport Dashboard from \"./Dashboard\";\nimport HomePage from \"./Homepage\";\nimport LoginForm from \"./LoginForm\";\nimport NavBar from \"./NavBar\";\nimport Profile from \"./Profile\";\nimport SignUpForm from \"./SignUpForm\";\nimport EditUser from './EditUser'\nimport jwt_decode from 'jwt-decode'\nimport UserSessions from \"./UserSessions\";\nimport EditSessionForm from \"./EditSession\";\n\nconst AppRouter = () => {\n  \n  let user = localStorage.getItem('token');\n\n  if(user){\n    if (jwt_decode(user).exp < Date.now() / 1000) {\n      localStorage.clear();\n    }\n    else {\n      user = jwt_decode(user)\n    }\n  }\n\n \n\n    return (\n        <BrowserRouter>\n          <div>\n            <NavBar username={user && user.username}/>\n            <Switch>\n                <Route path=\"/\" component={HomePage} exact />\n                <Route path=\"/sign_up\" component={SignUpForm} exact/>\n                <Route  path=\"/sign_in\" component={LoginForm} exact/>\n                <Route path=\"/dashboard\" exact>\n                  <Dashboard roles={user && user.rls} />\n                </Route>\n                <Route path=\"/user/create_session\" exact>\n                  <CreateSessionForm roles={user && user.rls} />\n                </Route>\n                <Route exact path=\"/user/sessions/:session/edit\" component={EditSessionForm}/>\n                <Route exact path=\"/user/:username/sessions\" component={UserSessions}/>\n                <Route exact path=\"/user/:username/edit\" component={EditUser}/>\n                <Route exact path=\"/user/:username\">\n                  <Profile username={user!=null && user.username}/>\n                </Route>\n                <Route component={Error} />\n            </Switch>\n          </div>\n        </BrowserRouter>\n    )\n}\n\nexport default AppRouter;",["72","73"],"/home/emily/Coding/tutoring_site/chem_tutoring_frontend/src/reportWebVitals.js",[],"/home/emily/Coding/tutoring_site/chem_tutoring_frontend/src/LoginForm.js",[],"/home/emily/Coding/tutoring_site/chem_tutoring_frontend/src/SignUpForm.js",[],"/home/emily/Coding/tutoring_site/chem_tutoring_frontend/src/NavBar.js",["74"],"import React, {useState} from 'react';\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Navbar, Nav } from 'react-bootstrap'\nimport {Link, useHistory} from 'react-router-dom'\nconst NavBar = (props) => {\n\n    const [username, setUsername] = useState(props.username || undefined)\n    const history = useHistory();\n    const logout = () =>{\n        localStorage.clear()\n        setUsername(undefined)\n\n    }\n    return (\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n            <LinkContainer to=\"/\">\n                <Navbar.Brand>JMSA Tutoring</Navbar.Brand>\n            </LinkContainer>\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n                <Nav>\n               \n\n                   {username ? (\n                       <div >\n                    <LinkContainer style={{display:\"inline\"}} to=\"/dashboard\">\n                        <Nav.Link style={{display:\"inline\"}}> Dashboard</Nav.Link>\n                    </LinkContainer>\n                        <LinkContainer style={{display:\"inline\"}} to=\"/user/create_session\">\n                            <Nav.Link style={{display:\"inline\"}}>Create Session</Nav.Link>\n                        </LinkContainer>\n\n                        <LinkContainer style={{display:\"inline\"}} to={`/user/${username}/sessions`}>\n                            <Nav.Link>Sessions</Nav.Link>\n                        </LinkContainer>\n\n                        <Navbar.Text style={{display:\"inline\"}}>Signed in as:\n                            <LinkContainer style={{display:\"inline\"}} to={`/user/${username}`}>\n                            <Nav.Link style={{display:\"inline\"}}>{username}</Nav.Link>\n                           </LinkContainer>\n                        </Navbar.Text>\n\n                        <Link style={{display:\"inline\"}} onClick={logout}>\n                            <Nav.Link style={{display:\"inline\"}}>Logout</Nav.Link>\n                        </Link>\n                       </div>) : (\n                    <div>\n                        <LinkContainer style={{display:\"inline\"}} to=\"/sign_in\">\n                            <Nav.Link>Login</Nav.Link>\n                        </LinkContainer>\n\n                        <LinkContainer style={{display:\"inline\"}} to=\"/sign_up\">\n                            <Nav.Link>Sign Up</Nav.Link>\n                        </LinkContainer>\n                    </div>)}\n\n\n                 \n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n    )\n}\n\nexport default NavBar;","/home/emily/Coding/tutoring_site/chem_tutoring_frontend/src/Profile.js",["75","76"],"/home/emily/Coding/tutoring_site/chem_tutoring_frontend/src/Dashboard.js",["77"],"import React, {useState, useEffect} from 'react'\nimport {axios_instance} from '.'\nimport UserCard from './UserCard'\n\n//Add support for som1 who is tutor + student\nconst Dashboard = (props) => {\n    const [userList, setUserList] = useState([])\n\n    useEffect(()=>{\n     if (props.roles.includes('tutor')) {\n      axios_instance.get('http://127.0.0.1:5000/user/students')\n        .then(function (response) {\n          console.log(response)\n          setUserList([...userList, ...response.data])\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    }\n\n    if (props.roles.includes('student')) {\n      axios_instance.get('http://127.0.0.1:5000/user/tutors')\n        .then(function (response) {\n          console.log(response)\n          setUserList([...userList, ...response.data])\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    }\n    }, [])\n\nconst userDash = userList.map((user)=>{\n   return <UserCard key={user._id.$oid} full_name={user.full_name} username={user.username} />\n})\n    return (\n        <div>\n           <h1>Users</h1>\n           {userDash}\n        </div>\n    )\n}\n\nexport default Dashboard;","/home/emily/Coding/tutoring_site/chem_tutoring_frontend/src/CreateSessionForm.js",["78","79","80","81"],"import React, { useEffect, useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport DayPicker from \"react-day-picker\";\nimport TimePicker from 'react-time-picker'\nimport { axios_instance } from '.';\nimport Select from 'react-select'\nimport \"../node_modules/react-time-picker/dist/TimePicker.css\";\nimport \"../node_modules/react-clock/dist/Clock.css\";\nconst CreateSessionForm = (props) => {\n\n  const [date, setDate] = useState('')\n  const [time, setTime] = useState('')\n  const [user_list, set_user_list] = useState([])\n  const [other_user, setOtherUser] = useState({})\n  const [errors, setErrors] = useState('')\n  \n  useEffect(() => {\n    if (props.roles.includes('tutor')) {\n      axios_instance.get('http://127.0.0.1:5000/user/students')\n        .then(function (response) {\n          console.log(response)\n          set_user_list([...user_list, ...response.data])\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    }\n\n    if (props.roles.includes('student')) {\n      axios_instance.get('http://127.0.0.1:5000/user/tutors')\n        .then(function (response) {\n          console.log(response)\n          set_user_list([...user_list, ...response.data])\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    }\n  }, [])\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    const subject = e.target.subject.value;\n    const session = {\n      subject: subject,\n      date: formatDateTime(date, time),\n      other_user: other_user\n    }\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }\n\n    axios_instance.post('http://127.0.0.1:5000/user/sessions/new', session, config)\n      .then((res) => {\n        console.log(res)\n      }).catch((err) => {\n        console.log(err)\n      })\n\n\n  }\n\n  const handleDayClick = (day, { selected }) => {\n    const selectedDay = selected ? undefined : day;\n    setDate(selectedDay)\n  }\n\n  const handleSelect = (selected) => {\n    setOtherUser(selected)\n  }\n\n  const onTimeChange = (time) => {\n    setTime(time)\n  }\n\n  const formatDateTime = (date, time) => {\n    const hour = parseInt(time.substring(0, 1)) == 0 ? parseInt(time.substring(1, 2)) : parseInt(time.substring(0, 2))\n    const minutes = time.substring(2)\n    const amPM = hour < 12 ? 'AM' : 'PM'\n    const formatted_hour = hour > 12 ? hour - 12 : hour;\n    time = formatted_hour + minutes + \" \" + amPM\n    return date.getMonth()+1 + \"/\" + date.getDate() + \"/\" + date.getFullYear() + \" \" + time;\n  }\n\n\n\n  return (\n    <div>\n      <h1>Set up a Session</h1>\n      <Form onSubmit={handleSubmit}>\n\n        <Form.Group controlId=\"subject\">\n          <Form.Label>Subject</Form.Label>\n          <Form.Control type=\"text\" />\n        </Form.Group>\n\n        <Form.Group controlId=\"session_attendee\">\n          <Form.Label>{props.roles.includes('tutor') ? 'Student' : 'Tutor'}</Form.Label>\n          <Select\n            onChange={handleSelect}\n            options={user_list}\n            getOptionLabel={(option) => option.username}\n            getOptionValue={(option) => option._id}\n          />\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Date</Form.Label>\n          <DayPicker\n            disabledDays={{ before: new Date() }}\n            format=\"M/D/YYYY\"\n            name=\"date\"\n            id=\"date\"\n            onDayClick={handleDayClick}\n            selectedDays={date}\n          />\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Time</Form.Label>\n          <TimePicker\n            name=\"time\"\n            id=\"time\"\n            onChange={onTimeChange}\n            value={time}\n          />\n        </Form.Group>\n\n        <Button variant=\"primary\" type=\"submit\">Submit</Button>\n      </Form>\n    </div>);\n}\n\nexport default CreateSessionForm;","/home/emily/Coding/tutoring_site/chem_tutoring_frontend/src/UserCard.js",[],"/home/emily/Coding/tutoring_site/chem_tutoring_frontend/src/EditUser.js",["82"],"import React, { useEffect, useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport {useParams } from \"react-router-dom\";\nimport DayPicker, {DateUtils} from \"react-day-picker\";\nimport { axios_instance } from '.';\n\n\nconst EditUser = (props) => {\nlet { username } = useParams();\n\nconst [dates, setDates] = useState([])\nif(props.location.state){\n  let savedState =  JSON.stringify(props.location.state);\n  localStorage.setItem('user', savedState);\n}  \n\nconst [user, set_user] = useState(\n    JSON.parse(localStorage.getItem('user'), function (key, value) {\n        if (key === 'availability') {\n            return value.map((date)=>{\n                return new Date(date)\n            })\n        } else {\n        return value;\n        }\n    }).user || {});\n\n// useEffect(()=>{\n//     if(props.location.state){\n//       let savedState =  JSON.stringify(props.location.state);\n//       localStorage.setItem('user', savedState);\n//     }  \n// },[])\n\nconst handleChange =  (e) => {\n    const updated_user =  {\n        ...user,\n        [e.target.id]: e.target.value\n    }\n    set_user(updated_user)\n}\n\nconst handleDayClick = (day, {selected})  => {\n    const arr = [...dates]\n    if(selected){\n      const selectedIndex = arr.findIndex(selectedDay =>\n        DateUtils.isSameDay(selectedDay, day)\n      );\n      arr.splice(selectedIndex, 1)\n      setDates(arr)\n    }\n    else{\n      setDates([...dates, day])\n    }\n  }\n\n  const parse_dates = (date_list) =>{\n    console.log(date_list)\n    return date_list.map((date)=>{\n      return date.getMonth()+1 + \"/\" + date.getDate() + \"/\" + date.getFullYear()\n    })\n  }\nconst handleSubmit = (e) => {\n    e.preventDefault();\n    const parsed_availability = parse_dates(user.availability);\n    const edited_user = {\n      email:user.email,\n      full_name:user.full_name,\n      username: user.username,\n      password:user.password,\n      biography:user.biography,\n      roles:user.roles,\n      availability: parsed_availability,\n      us_phone_number: user.us_phone_number\n    }\n    const config = {\n        xhrFields: {\n            withCredentials: true\n        },\n        crossDomain: true,\n        headers: {\n            'Content-Type': 'application/json',\n        }\n    }\n    axios_instance.post(`http://127.0.0.1:5000/user/${username}/edit`, edited_user, config)\n    .then(function (res) {\n      localStorage.setItem('user', JSON.stringify(res));\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n  }\n\nreturn (\n    <div>\n      <h1>Edit</h1>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group controlId=\"email\">\n          <Form.Label>Email address</Form.Label>\n          <Form.Control type=\"email\" value={user.email || ' '} onChange={handleChange}/>\n        </Form.Group>\n\n        <Form.Group controlId=\"full_name\">\n          <Form.Label>Full Name</Form.Label>\n          <Form.Control type=\"text\" value={user.full_name || ' '} onChange={handleChange}/>\n        </Form.Group>\n\n        <Form.Group controlId=\"username\">\n          <Form.Label>Username</Form.Label>\n          <Form.Control type=\"text\" value={user.username || ' '} onChange={handleChange}/>\n        </Form.Group>\n\n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control type=\"password\" value={user.username || ' '} onChange={handleChange}/>\n        </Form.Group>\n\n        <Form.Group controlId=\"us_phone_number\">\n          <Form.Label>Phone Number</Form.Label>\n          <Form.Control type=\"tel\" pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\" required value={user.us_phone_number || ' '} onChange={handleChange}/>\n        </Form.Group>\n\n        <Form.Group controlId=\"biography\">\n          <Form.Label>Tell us about yourself!</Form.Label>\n          <Form.Control as=\"textarea\" rows={3} value={user.biography || ' '} onChange={handleChange}/>\n        </Form.Group>\n\n        <Form.Group controlId=\"role\">\n          <Form.Check\n            inline\n            value=\"tutor\"\n            name=\"role\"\n            label=\"Tutor\"\n            type=\"radio\"\n            id=\"tutor\"\n          />\n          <Form.Check\n            inline\n            value=\"student\"\n            name=\"role\"\n            label=\"Student\"\n            type=\"radio\"\n            id=\"student\"\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"availability\">\n          <Form.Label>Availability</Form.Label>\n          <DayPicker\n          \n          format=\"MM/DD/YYYY\"\n          name=\"availability\"\n          onDayClick={handleDayClick}\n          selectedDays={user.availability}\n          />\n          \n        </Form.Group>\n\n        <Button variant=\"primary\" type=\"submit\">\n          Submit\n        </Button>\n      </Form>\n    </div>);\n}\n\nexport default EditUser;\n\n","/home/emily/Coding/tutoring_site/chem_tutoring_frontend/src/UserSessions.js",["83","84"],"import React, { useEffect, useState } from 'react'\nimport { propTypes } from 'react-bootstrap/esm/Image';\nimport {useParams} from 'react-router-dom'\nimport { axios_instance } from '.'\nimport SessionListing from './SessionListing';\n\nconst UserSessions = (props) => {\n    const { username} = useParams();\n    const [sessions_list, set_sessions_list] = useState([])\n\n    useEffect(() => {\n        const config = {\n            xhrFields: {\n                withCredentials: true\n            },\n            crossDomain: true,\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        }\n\n        axios_instance.get(`http://127.0.0.1:5000/user/${username}/sessions`, config)\n        .then((res)=>{\n            console.log(res)\n            set_sessions_list(res.data)\n        })\n        .catch((err)=>{\n            console.log(err)\n        })\n    }, [])\n\n    console.log(sessions_list)\n    const sessions = sessions_list.map((session)=>(\n        <SessionListing key={session._id} session={session}/>\n    ))\n\n    return (\n        <div>\n            <h1>HI</h1>\n            {sessions}\n        </div>\n    )\n}\n\nexport default UserSessions;","/home/emily/Coding/tutoring_site/chem_tutoring_frontend/src/SessionListing.js",[],"/home/emily/Coding/tutoring_site/chem_tutoring_frontend/src/EditSession.js",["85","86","87","88","89","90","91"],"import React, {useEffect, useState} from 'react';\nimport { Form, Button } from 'react-bootstrap'\nimport {useParams } from \"react-router-dom\";\nimport DayPicker, {DateUtils} from \"react-day-picker\";\nimport { axios_instance } from '.';\nimport Select from 'react-select'\nimport \"../node_modules/react-time-picker/dist/TimePicker.css\";\nimport \"../node_modules/react-clock/dist/Clock.css\";\nimport TimePicker from 'react-time-picker'\n\n\nconst EditSessionForm = (props) => {\n\n  if(props.location.state){\n    let savedState =  JSON.stringify(props.location.state.session);\n    localStorage.setItem('session', savedState);\n  }  \n\n  const [time, setTime] = useState('')\n  const [session, setSession] = useState(\n  JSON.parse(localStorage.getItem('session'), function (key, value) {\n    if (key === 'date') {\n        return new Date(value.$date)\n    } else {\n    return value;\n    }\n}) || {})\n\n  const [errors, setErrors] = useState('')\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    const subject = e.target.subject.value;\n    const edited_session = {\n      ...session,\n      subject: subject,\n      date: formatDateTime(session.date, time),\n    }\n\n      const config = {\n        xhrFields: {\n            withCredentials: true\n        },\n        crossDomain: true,\n        headers: {\n            'Content-Type': 'application/json',\n        }\n    }\n\n      axios_instance.post(`/user/sessions/${session._id.$oid}/edit`, edited_session, config )\n      .then((res)=>{\n        localStorage.setItem('session', JSON.stringify(res))\n      })\n      .catch((err)=>{\n        console.log(err)\n      })\n    }\n\n\n  const handleDayClick = (day, { selected }) => {\n    const selectedDay = selected ? undefined : day;\n    const updated_session = {...session, date: selectedDay}\n    setSession(updated_session)\n  }\n\n  const onTimeChange = (time) => {\n    setTime(time)\n  }\n\n  const formatDateTime = (date, time) => {\n    const hour = parseInt(time.substring(0, 1)) == 0 ? parseInt(time.substring(1, 2)) : parseInt(time.substring(0, 2))\n    const minutes = time.substring(2)\n    const amPM = hour < 12 ? 'AM' : 'PM'\n    const formatted_hour = hour > 12 ? hour - 12 : hour;\n    time = formatted_hour + minutes + \" \" + amPM\n    console.log(date.getMonth()+1 + \"/\" + date.getDate() + \"/\" + date.getFullYear() + \" \" + time)\n    return date.getMonth()+1 + \"/\" + date.getDate() + \"/\" + date.getFullYear() + \" \" + time;\n  }\n\n\n\n  return (\n    <div>\n      <h1>Edit Session</h1>\n      <Form onSubmit={handleSubmit}>\n\n        <Form.Group controlId=\"subject\">\n          <Form.Label>Subject</Form.Label>\n          <Form.Control type=\"text\" value={session.subject}/>\n        </Form.Group>\n\n        <Form.Group controlId=\"subject\">\n          <Form.Label>Tutor</Form.Label>\n          <Form.Control type=\"text\" value={session.tutor.username}/>\n        </Form.Group>\n\n        <Form.Group controlId=\"subject\">\n          <Form.Label>Student</Form.Label>\n          <Form.Control type=\"text\" value={session.student.username}/>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Date</Form.Label>\n          <DayPicker\n            // disabledDays={{ before: new Date() }}\n            format=\"M/D/YYYY\"\n            name=\"date\"\n            id=\"date\"\n            onDayClick={handleDayClick}\n            selectedDays={new Date(session.date)}\n          />\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Time</Form.Label>\n          <TimePicker\n            name=\"time\"\n            id=\"time\"\n            onChange={onTimeChange}\n            value={time}\n          />\n        </Form.Group>\n\n        <Button variant=\"primary\" type=\"submit\">Submit</Button>\n      </Form>\n    </div>);\n}\n\n\nexport default EditSessionForm;",{"ruleId":"92","severity":1,"message":"93","line":1,"column":17,"nodeType":"94","messageId":"95","endLine":1,"endColumn":26},{"ruleId":"92","severity":1,"message":"96","line":6,"column":3,"nodeType":"94","messageId":"95","endLine":6,"endColumn":13},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"92","severity":1,"message":"101","line":8,"column":11,"nodeType":"94","messageId":"95","endLine":8,"endColumn":18},{"ruleId":"102","severity":1,"message":"103","line":33,"column":8,"nodeType":"104","endLine":33,"endColumn":10,"suggestions":"105"},{"ruleId":"106","severity":1,"message":"107","line":46,"column":38,"nodeType":"108","messageId":"109","endLine":46,"endColumn":40},{"ruleId":"102","severity":1,"message":"110","line":31,"column":8,"nodeType":"104","endLine":31,"endColumn":10,"suggestions":"111"},{"ruleId":"92","severity":1,"message":"112","line":15,"column":10,"nodeType":"94","messageId":"95","endLine":15,"endColumn":16},{"ruleId":"92","severity":1,"message":"113","line":15,"column":18,"nodeType":"94","messageId":"95","endLine":15,"endColumn":27},{"ruleId":"102","severity":1,"message":"114","line":39,"column":6,"nodeType":"104","endLine":39,"endColumn":8,"suggestions":"115"},{"ruleId":"106","severity":1,"message":"107","line":79,"column":49,"nodeType":"108","messageId":"109","endLine":79,"endColumn":51},{"ruleId":"102","severity":1,"message":"116","line":33,"column":3,"nodeType":"104","endLine":33,"endColumn":5,"suggestions":"117"},{"ruleId":"92","severity":1,"message":"118","line":2,"column":10,"nodeType":"94","messageId":"95","endLine":2,"endColumn":19},{"ruleId":"102","severity":1,"message":"119","line":30,"column":8,"nodeType":"104","endLine":30,"endColumn":10,"suggestions":"120"},{"ruleId":"92","severity":1,"message":"93","line":1,"column":16,"nodeType":"94","messageId":"95","endLine":1,"endColumn":25},{"ruleId":"92","severity":1,"message":"121","line":3,"column":9,"nodeType":"94","messageId":"95","endLine":3,"endColumn":18},{"ruleId":"92","severity":1,"message":"122","line":4,"column":20,"nodeType":"94","messageId":"95","endLine":4,"endColumn":29},{"ruleId":"92","severity":1,"message":"123","line":6,"column":8,"nodeType":"94","messageId":"95","endLine":6,"endColumn":14},{"ruleId":"92","severity":1,"message":"112","line":29,"column":10,"nodeType":"94","messageId":"95","endLine":29,"endColumn":16},{"ruleId":"92","severity":1,"message":"113","line":29,"column":18,"nodeType":"94","messageId":"95","endLine":29,"endColumn":27},{"ruleId":"106","severity":1,"message":"107","line":71,"column":49,"nodeType":"108","messageId":"109","endLine":71,"endColumn":51},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","no-native-reassign",["124"],"no-negated-in-lhs",["125"],"'history' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'user' and 'username'. Either include them or remove the dependency array.","ArrayExpression",["126"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'props.roles' and 'userList'. Either include them or remove the dependency array. You can also do a functional update 'setUserList(u => ...)' if you only need 'userList' in the 'setUserList' call.",["127"],"'errors' is assigned a value but never used.","'setErrors' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.roles' and 'user_list'. Either include them or remove the dependency array. You can also do a functional update 'set_user_list(u => ...)' if you only need 'user_list' in the 'set_user_list' call.",["128"],"React Hook useEffect has a missing dependency: 'props.location.state'. Either include it or remove the dependency array.",["129"],"'propTypes' is defined but never used.","React Hook useEffect has a missing dependency: 'username'. Either include it or remove the dependency array.",["130"],"'useParams' is defined but never used.","'DateUtils' is defined but never used.","'Select' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},"Update the dependencies array to be: [user, username]",{"range":"141","text":"142"},"Update the dependencies array to be: [props.roles, userList]",{"range":"143","text":"144"},"Update the dependencies array to be: [props.roles, user_list]",{"range":"145","text":"146"},"Update the dependencies array to be: [props.location.state]",{"range":"147","text":"148"},"Update the dependencies array to be: [username]",{"range":"149","text":"150"},[1144,1146],"[user, username]",[915,917],"[props.roles, userList]",[1308,1310],"[props.roles, user_list]",[941,943],"[props.location.state]",[880,882],"[username]"]